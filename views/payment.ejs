<!DOCTYPE html>
<html lang="en" ng-app="paymentApp">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment - Next Gen Store</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --glass-bg: rgba(255, 255, 255, 0.05);
            --glass-border: rgba(255, 255, 255, 0.1);
            --primary-gradient: linear-gradient(135deg, #FFD700, #b8860b);
            --error-color: #ff4444;
            --gold: #FFD700;
            --dark-gold: #b8860b;
        }

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            min-height: 100vh;
            background: #000;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .payment-container {
            width: 100%;
            max-width: 480px;
            padding: 2rem;
            background: rgba(20, 20, 20, 0.95);
            border: 1px solid var(--gold);
            border-radius: 24px;
            box-shadow: 0 8px 32px rgba(255, 215, 0, 0.1);
        }

        .card-preview {
            height: 200px;
            background: linear-gradient(45deg, #000, #1a1a1a);
            border: 1px solid var(--gold);
            border-radius: 16px;
            padding: 20px;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .card-number {
            color: var(--gold);
            font-size: 1.5rem;
            letter-spacing: 2px;
        }

        .input-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .input-group-row {
            display: flex;
            gap: 1rem;
        }

        .input-group-row input {
            width: 50%;
        }

        input {
            width: 100%;
            padding: 12px 16px;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 215, 0, 0.3);
            border-radius: 12px;
            color: #fff;
            font-size: 1rem;
            transition: all 0.3s;
        }

        input:focus {
            outline: none;
            border-color: var(--gold);
            box-shadow: 0 0 0 2px rgba(255, 215, 0, 0.1);
        }

        .pay-button {
            width: 100%;
            padding: 14px;
            background: var(--primary-gradient);
            border: none;
            border-radius: 12px;
            color: #000;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .pay-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(255, 215, 0, 0.2);
        }

        .receipt {
            display: none;
            animation: slideUp 0.5s ease;
            border: 1px solid var(--gold);
            background: rgba(20, 20, 20, 0.95);
        }

        @keyframes slideUp {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .success-icon {
            width: 60px;
            height: 60px;
            margin: 0 auto 1rem;
            border-radius: 50%;
            background: var(--primary-gradient);
            color: #000;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .error-message {
            color: var(--error-color);
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }

        .loading {
            position: relative;
            pointer-events: none;
        }

        .loading::after {
            content: "";
            position: absolute;
            width: 20px;
            height: 20px;
            border: 2px solid var(--gold);
            border-radius: 50%;
            border-top-color: transparent;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: translateY(-50%) rotate(360deg); }
        }

        h2, h3 {
            color: var(--gold);
            text-align: center;
        }

        .receipt-details p {
            border-bottom: 1px solid rgba(255, 215, 0, 0.1);
            padding: 8px 0;
        }
    </style>
</head>
<body ng-controller="PaymentCtrl">
    <div class="payment-container">
        <div class="card-preview" ng-show="!paymentSuccess">
            <div class="card-number">{{cardNumber || '**** **** **** ****'}}</div>
            <div class="card-details">
                <span>{{cardHolder || 'CARD HOLDER'}}</span>
                <span>{{expiryDate || 'MM/YY'}}</span>
            </div>
        </div>

        <form ng-submit="processPayment()" ng-show="!paymentSuccess" name="paymentForm" novalidate>
            <div class="input-group">
                <input type="text" 
                       ng-model="cardNumber" 
                       placeholder="Card Number" 
                       maxlength="19" 
                       ng-change="formatCardNumber()"
                       required
                       pattern="\d{4}\s\d{4}\s\d{4}\s\d{4}">
                <div class="error-message" ng-show="paymentForm.$submitted && paymentForm.cardNumber.$error.pattern">
                    Invalid card number
                </div>
            </div>
            <div class="input-group">
                <input type="text" 
                       ng-model="cardHolder" 
                       placeholder="Card Holder Name"
                       required
                       pattern="[A-Za-z\s]+">
            </div>
            <div class="input-group-row">
                <input type="text" 
                       ng-model="expiryDate" 
                       placeholder="MM/YY" 
                       maxlength="5"
                       required
                       pattern="(0[1-9]|1[0-2])\/([0-9]{2})">
                <input type="password" 
                       ng-model="cvv" 
                       placeholder="CVV" 
                       maxlength="3"
                       required
                       pattern="\d{3}">
            </div>
            <button type="submit" 
                    class="pay-button" 
                    ng-class="{'loading': processing}">
                {{processing ? 'Processing...' : 'Pay ₹' + amount}}
            </button>
        </form>

        <div class="receipt" ng-show="paymentSuccess">
            <div class="success-icon">✓</div>
            <h3>Payment Successful!</h3>
            <div class="receipt-details">
                <p>Transaction ID: {{transactionId}}</p>
                <p>Amount: ₹{{amount}}</p>
                <p>Date: {{paymentDate}}</p>
            </div>
            <button class="pay-button" ng-click="downloadReceipt()">Download Receipt</button>
        </div>
    </div>

    <script>
        angular.module('paymentApp', [])
        .controller('PaymentCtrl', function($scope, $timeout) {
            $scope.amount = (sessionStorage.getItem('paymentAmount') || '0.00').toString();
            $scope.paymentSuccess = false;
            $scope.processing = false;

            $scope.formatCardNumber = function() {
                if (!$scope.cardNumber) return;
                $scope.cardNumber = $scope.cardNumber.replace(/\D/g, '')
                    .match(/.{1,4}/g)?.join(' ') || '';
            };

            $scope.processPayment = function() {
                if (!$scope.paymentForm.$valid) return;
                
                $scope.processing = true;
                
                // Simulate payment processing
                $timeout(function() {
                    $scope.processing = false;
                    $scope.paymentSuccess = true;
                    $scope.transactionId = 'TXN' + Math.random().toString(36).substr(2, 9).toUpperCase();
                    $scope.paymentDate = new Date().toLocaleString();

                    // Redirect after 5 seconds
                    $timeout(function() {
                        window.location.href = '/store';
                    }, 5000);
                }, 2000);
            };

            $scope.downloadReceipt = function() {
                const receiptContent = `
                    Transaction Receipt
                    ------------------
                    Transaction ID: ${$scope.transactionId}
                    Amount: ₹${$scope.amount}
                    Date: ${$scope.paymentDate}
                    Status: Successful
                `;
                
                const blob = new Blob([receiptContent], { type: 'text/plain' });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'receipt-' + $scope.transactionId + '.txt';
                a.click();
                window.URL.revokeObjectURL(url);
            };
        });
    </script>
</body>
</html>